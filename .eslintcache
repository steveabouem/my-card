[{"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx":"1","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx":"3","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx":"4","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx":"5","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx":"6","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx":"7","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx":"8","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Navbar.tsx":"9","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts":"10","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts":"11","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts":"12","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts":"13","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\index.ts":"14","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts":"15","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx":"16","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\ModalCloseButton.tsx":"17","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts":"18","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx":"19","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\index.ts":"20","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts":"21","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\messageHandler.ts":"22","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\message.repository.ts":"23","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Services\\Services.tsx":"24","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Pricing\\Pricing.tsx":"25"},{"size":369,"mtime":1631196106011,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1615668605724,"results":"28","hashOfConfig":"27"},{"size":1601,"mtime":1651110737414,"results":"29","hashOfConfig":"27"},{"size":5265,"mtime":1650137198035,"results":"30","hashOfConfig":"27"},{"size":1429,"mtime":1649033845636,"results":"31","hashOfConfig":"27"},{"size":931,"mtime":1650137465395,"results":"32","hashOfConfig":"27"},{"size":6671,"mtime":1650137343350,"results":"33","hashOfConfig":"27"},{"size":504,"mtime":1650423367163,"results":"34","hashOfConfig":"27"},{"size":5969,"mtime":1651110547629,"results":"35","hashOfConfig":"27"},{"size":85,"mtime":1617810918535,"results":"36","hashOfConfig":"27"},{"size":3764,"mtime":1651111926233,"results":"37","hashOfConfig":"27"},{"size":1569,"mtime":1649599558308,"results":"38","hashOfConfig":"27"},{"size":11938,"mtime":1651111894019,"results":"39","hashOfConfig":"27"},{"size":53,"mtime":1631196106009,"results":"40","hashOfConfig":"27"},{"size":1156,"mtime":1649811105884,"results":"41","hashOfConfig":"27"},{"size":715,"mtime":1650137071860,"results":"42","hashOfConfig":"27"},{"size":510,"mtime":1632326921542,"results":"43","hashOfConfig":"27"},{"size":1032,"mtime":1631196105981,"results":"44","hashOfConfig":"27"},{"size":1246,"mtime":1650423560599,"results":"45","hashOfConfig":"27"},{"size":33,"mtime":1632326921534,"results":"46","hashOfConfig":"27"},{"size":61,"mtime":1617810918547,"results":"47","hashOfConfig":"27"},{"size":275,"mtime":1632326921535,"results":"48","hashOfConfig":"27"},{"size":360,"mtime":1632326921538,"results":"49","hashOfConfig":"27"},{"size":2929,"mtime":1650138873465,"results":"50","hashOfConfig":"27"},{"size":3432,"mtime":1651112944309,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9h3fe0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx",[],[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js",["108","109"],"const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx",["110","111","112"],"import React, {useMemo, useState} from 'react';\r\nimport { Formik, useFormikContext } from 'formik';\r\nimport * as Yup from 'yup'; \r\nimport { BounceLoader } from 'react-spinners';\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport '../../UTILS/i18n/config';\r\nimport {\r\n  StyledButtonOverlay,\r\n  StyledField, StyledFormWrapper,\r\n  StyledInvalidMessage,\r\n  StyledLabel,\r\n  StyledLoaderWrap,\r\n  StyledPaddedContentWrap,\r\n  StyledContactLayover\r\n} from '../styles';\r\nimport { icons, StyledLargeText } from '../common';\r\nimport SectionTitle from '../common/SectionTitle';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { sendMessage } from '../../API';\r\nimport {IMessageDTO } from '../../API/dto/message.dto';\r\nimport {faCheckCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface IContactFieldProps {\r\n  name: string;\r\n  label: string;\r\n  customClass?: string;\r\n  type?: string;\r\n}\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n    senderEmail: Yup.string()\r\n    .email('Must be a valid address.')\r\n    .required('Required'),\r\n  sender: Yup.string()\r\n    .min(4, '4 characters minimum.')\r\n    .max(16, '16 characters maximum.')\r\n    .required('Required'),\r\n  message: Yup.string()\r\n    .min(20, '20 characters minimum.')\r\n    .max(200, '200 characters maximum.')\r\n});\r\n\r\nconst Contact = (): JSX.Element => {\r\n  const [messageStatus, setMessageStatus] = useState<200 | 500 | undefined>(undefined);\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n\r\n  const hasError = useMemo(() => messageStatus === 500, [messageStatus]);\r\n\r\n  const { t } = useTranslation(['ns4', 'ns6']);\r\n  // TODO: should I add a way to make the form about either REVIEW or Request? exp: \"reason\" dropdown field, and a link in page description that sets the dropdown to the value they want\r\n  // if you add this, then restore the Testimonials page\r\n  const { ref, inView } = useInView();\r\n  const handleSubmit = async (mData: IMessageDTO) => {\r\n      setIsSubmitting(true);\r\n    mData.sentOn = moment().format('YYYY-MM-DD, HH:mm:s');\r\n    const { data } = await sendMessage(mData);\r\n\r\n    setIsSubmitting(false);\r\n    setMessageStatus(data.status);\r\n    // they don't need to be able to send another one right away\r\n    // setTimeout(() => {\r\n    //   setMessageStatus(undefined);\r\n    // }, 8000);\r\n  };\r\n\r\n  return (\r\n    <StyledPaddedContentWrap ref={ref} className=\"pb-4\">\r\n        <div className=\"h-100\">\r\n          {inView && <SectionTitle title={t('ns4:section_title')} isInView={inView} section=\"contact\" />}\r\n          <p>{t('ns4:parag_1')}</p>\r\n          <p className=\"font-weight-bold py-3\">{t('ns4:parag_2')}</p>\r\n          <Formik\r\n            initialValues={{ email: '', name: '', message: '' }}\r\n            validationSchema={ContactSchema}\r\n            onSubmit={(values: any, { setSubmitting }) => {\r\n              setTimeout(() => {\r\n              handleSubmit(values)\r\n                setSubmitting(false);\r\n              }, 400);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              submitForm,\r\n              handleBlur,\r\n              isValid\r\n            }) => (\r\n            <StyledFormWrapper>\r\n              {isSubmitting && (\r\n                <StyledLoaderWrap>\r\n                  <BounceLoader\r\n                    size={150}\r\n                    css={`\r\n                      opacity: .5;\r\n                    `}\r\n                    color=\"#0e155a\"\r\n                    loading\r\n                  />\r\n                </StyledLoaderWrap>\r\n              )}\r\n              {messageStatus ? <StyledContactLayover error={hasError}>\r\n                <FontAwesomeIcon icon={hasError ? icons.danger.static : faCheckCircle} size=\"3x\" />\r\n                {hasError ? (\r\n                  <div>{t('ns6:error')}</div>\r\n                ) : (\r\n                  <>\r\n                    <div>{t('ns6:success')}</div>\r\n                    <div>{t('ns6:message_1')}</div>\r\n                    <div>{t('ns6:message_2')}</div>\r\n                  </>\r\n                )}\r\n              </StyledContactLayover> : null}\r\n\r\n              <form onSubmit={submitForm} className=\"d-flex flex-column\">\r\n                <ContactField type=\"email\" name=\"senderEmail\" label={t('ns4:email')} />\r\n                <ContactField type=\"name\" name=\"sender\" label={t('ns4:name')} />\r\n                <div className=\"d-flex flex-column w-100\">\r\n                  {errors.message && touched.message && (\r\n                    <StyledInvalidMessage className=\"invalid-message\">\r\n                      <FontAwesomeIcon icon={icons.danger.static} />\r\n                      {errors.message}\r\n                    </StyledInvalidMessage>\r\n                  )}\r\n                  <StyledLabel>MESSAGE</StyledLabel>\r\n                  <StyledField\r\n                    name=\"message\"\r\n                    as=\"textarea\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={'message' + (errors.message && touched.message ? ' invalid' : '')}\r\n                  />\r\n                </div>\r\n                <StyledButtonOverlay\r\n                  className={`d-flex flex-column position-relative ${!isValid ? ' invalid' : ''}`}\r\n                  onClick={submitForm}\r\n                >\r\n                  <div className=\"static\">\r\n                    <div className=\"top\">{t('ns4:submit')}</div>\r\n                  </div>\r\n                  <div className=\"hovered\">\r\n                    <div className=\"top\">{t('ns4:submit')}</div>\r\n                  </div>\r\n                </StyledButtonOverlay>\r\n              </form>\r\n            </StyledFormWrapper>\r\n            )}\r\n          </Formik>\r\n      </div>\r\n    </StyledPaddedContentWrap>\r\n  );\r\n};\r\n\r\n\r\nconst ContactField = ({name, label, customClass, type}: IContactFieldProps) => {\r\n  const {touched, errors, handleChange, handleBlur}: any = useFormikContext();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column w-100\">\r\n      { errors[name] && touched[name] && (\r\n        <StyledInvalidMessage className=\"invalid-message\">\r\n          <FontAwesomeIcon icon={icons.danger.static} />\r\n          {errors[name]}\r\n        </StyledInvalidMessage>\r\n      )}\r\n      <StyledLabel>{label.toUpperCase()}</StyledLabel>\r\n      <StyledField\r\n        type={type}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        className={customClass + (errors[name] && touched[name] ? ' invalid' : '')}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Contact;","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Navbar.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\index.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\ModalCloseButton.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx",["113","114"],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\index.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\messageHandler.ts",["115"],"import { IMessageDTO } from \"./dto/message.dto\";\r\nimport MessageRepository from \"./repositories/message.repository\";\r\n\r\nexport const sendMessage = async (data: IMessageDTO) => {\r\n  const messageRepo = new MessageRepository();\r\n  return messageRepo.sendMessageToDev(data);\r\n};","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\message.repository.ts",["116"],"import axios from 'axios';\r\nimport { IMessageDTO } from '../dto/message.dto';\r\n\r\nexport default class MessageRepository {\r\n  baseURL?: string;\r\n\r\n  constructor() {\r\n    this.baseURL = \"https://us-central1-steve-a.cloudfunctions.net\";\r\n  }\r\n\r\n  sendMessageToDev =  (mData:IMessageDTO) => {\r\n    return axios.post(`${this.baseURL}/saveLead`, {...mData});\r\n  }\r\n}","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Services\\Services.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Pricing\\Pricing.tsx",[],{"ruleId":"117","severity":1,"message":"118","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":39},{"ruleId":"117","severity":1,"message":"121","line":1,"column":25,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":18,"column":17,"nodeType":"122","messageId":"126","endLine":18,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":77,"column":32,"nodeType":"129","messageId":"130","endLine":77,"endColumn":35,"suggestions":"131"},{"ruleId":"127","severity":1,"message":"128","line":159,"column":54,"nodeType":"129","messageId":"130","endLine":159,"endColumn":57,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":36,"column":19,"nodeType":"122","messageId":"126","endLine":36,"endColumn":29},{"ruleId":"124","severity":1,"message":"134","line":38,"column":9,"nodeType":"122","messageId":"126","endLine":38,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":4,"column":28,"nodeType":"119","messageId":"120","endLine":4,"endColumn":56},{"ruleId":"117","severity":1,"message":"118","line":11,"column":23,"nodeType":"119","messageId":"120","endLine":11,"endColumn":45},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'StyledLargeText' is defined but never used.","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["135","136"],["137","138"],"'setLoading' is assigned a value but never used.","'handleLoaderState' is assigned a value but never used.",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},"suggestUnknown",{"range":"147","text":"148"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"147","text":"149"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"150","text":"148"},{"range":"150","text":"149"},[2902,2905],"unknown","never",[6030,6033]]