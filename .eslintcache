[{"C:\\Users\\sabouem\\Desktop\\my-card\\src\\index.tsx":"1","C:\\Users\\sabouem\\Desktop\\my-card\\src\\reportWebVitals.js":"2","C:\\Users\\sabouem\\Desktop\\my-card\\src\\App.tsx":"3","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\Footer.tsx":"4","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx":"5","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx":"6","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx":"7","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx":"8","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Work\\Work.tsx":"9","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx":"10","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\index.ts":"11","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\styles.ts":"12","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\icons.ts":"13","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\styles.ts":"14","C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\types.ts":"15","C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\config.ts":"16","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx":"17","C:\\Users\\sabouem\\Desktop\\my-card\\src\\API\\repositories\\testData\\workItems.ts":"18","C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\index.ts":"19"},{"size":369,"mtime":1622857772855,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1622591499852,"results":"22","hashOfConfig":"21"},{"size":1082,"mtime":1622864289612,"results":"23","hashOfConfig":"21"},{"size":504,"mtime":1622591499810,"results":"24","hashOfConfig":"21"},{"size":5651,"mtime":1622866552405,"results":"25","hashOfConfig":"21"},{"size":976,"mtime":1622591499797,"results":"26","hashOfConfig":"21"},{"size":926,"mtime":1622858050605,"results":"27","hashOfConfig":"21"},{"size":4908,"mtime":1622857764620,"results":"28","hashOfConfig":"21"},{"size":5611,"mtime":1622863129092,"results":"29","hashOfConfig":"21"},{"size":742,"mtime":1622857764618,"results":"30","hashOfConfig":"21"},{"size":85,"mtime":1622591499818,"results":"31","hashOfConfig":"21"},{"size":9047,"mtime":1622867249914,"results":"32","hashOfConfig":"21"},{"size":1353,"mtime":1622591499816,"results":"33","hashOfConfig":"21"},{"size":2880,"mtime":1622867138935,"results":"34","hashOfConfig":"21"},{"size":61,"mtime":1622591499846,"results":"35","hashOfConfig":"21"},{"size":813,"mtime":1622857764626,"results":"36","hashOfConfig":"21"},{"size":665,"mtime":1622591499813,"results":"37","hashOfConfig":"21"},{"size":1114,"mtime":1622857764616,"results":"38","hashOfConfig":"21"},{"size":53,"mtime":1622857764645,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"eb1sih",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sabouem\\Desktop\\my-card\\src\\index.tsx",[],[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\reportWebVitals.js",["82","83"],"const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\App.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\Footer.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx",["84","85"],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx",["86"],"import React from 'react';\r\nimport { Formik, useFormikContext } from 'formik';\r\nimport * as Yup from 'yup'; \r\nimport { BounceLoader } from 'react-spinners';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  StyledButtonOverlay,\r\n  StyledField, StyledFormWrapper,\r\n  StyledInvalidMessage,\r\n  StyledLabel,\r\n  StyledLoaderWrap,\r\n  StyledPaddedContentWrap\r\n} from '../styles';\r\nimport { icons } from '../common';\r\nimport SectionTitle from '../common/SectionTitle';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\ninterface IContactFieldProps {\r\n  name: string;\r\n  customClass?: string;\r\n  type?: string;\r\n}\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Must be a valid address.')\r\n    .required('Required'),\r\n  name: Yup.string()\r\n    .min(4, '4 characters minimum.')\r\n    .max(16, '16 characters maximum.')\r\n    .required('Required'),\r\n  message: Yup.string()\r\n    .min(20, '20 characters minimum.')\r\n    .max(200, '200 characters maximum.')\r\n});\r\n\r\nconst Contact = (): JSX.Element => {\r\n  // TODO: should I add a way to make the form about either REVIEW or Request? exp: \"reason\" dropdown field, and a link in page description that sets the dropdown to the value they want\r\n  // if you add this, then restore the Testimonials page\r\n  const { ref, inView } = useInView();\r\n\r\n  return (\r\n    <StyledPaddedContentWrap ref={ref}>\r\n      {inView && <SectionTitle title=\"Reach Out!\" isInview={inView} />}\r\n      <div className=\"pb-2\">Looking to work on a project together,need a website for your business, to promote a product or event?</div>\r\n      <div className=\"pb-2\">Hit me up below and I'd be happy to reply to any inquiries you have.</div>\r\n      <div className=\"pb-2\">Please note that <b>I DO NOT</b> participate in, or  provide consulting services for product/project development.</div>\r\n      <Formik\r\n        initialValues={{ email: '', name: '', message: '' }}\r\n        validationSchema={ContactSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          submitForm,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          isValid\r\n        }) => (\r\n        <StyledFormWrapper>\r\n          {isSubmitting && (\r\n            <StyledLoaderWrap>\r\n              <BounceLoader\r\n                size={150}\r\n                css={`\r\n                  opacity: .5;\r\n                `}\r\n                color=\"#0e155a\"\r\n                loading\r\n              />\r\n            </StyledLoaderWrap>\r\n          )}\r\n          <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n            <ContactField type=\"email\" name=\"email\" />\r\n            <ContactField type=\"name\" name=\"name\" />\r\n            <div className=\"d-flex flex-column w-100\">\r\n              {errors.message && touched.message && (\r\n                <StyledInvalidMessage className=\"invalid-message\">\r\n                  <FontAwesomeIcon icon={icons.danger.static} />\r\n                  {errors.message}\r\n                </StyledInvalidMessage>\r\n              )}\r\n              <StyledLabel>MESSAGE</StyledLabel>\r\n              <StyledField\r\n                name=\"message\"\r\n                as=\"textarea\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={'message' + (errors.message && touched.message ? ' invalid' : '')}\r\n              />\r\n            </div>\r\n            <StyledButtonOverlay \r\n              className={`d-flex flex-column position-relative ${!isValid ? ' invalid' : ''}`}\r\n              onClick={submitForm}\r\n            >\r\n              <div className=\"static\">\r\n                <div className=\"top\">Submit</div>\r\n              </div>\r\n              <div className=\"hovered\">\r\n                <div className=\"top\">Submit</div>\r\n              </div>\r\n            </StyledButtonOverlay>\r\n          </form>\r\n        </StyledFormWrapper>\r\n        )}\r\n      </Formik>\r\n    </StyledPaddedContentWrap>\r\n  );\r\n};\r\n\r\n\r\nconst ContactField = ({name, customClass, type}: IContactFieldProps) => {\r\n  const {touched, errors, handleChange, handleBlur}: any = useFormikContext();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column w-100\">\r\n      { errors[name] && touched[name] && (\r\n        <StyledInvalidMessage className=\"invalid-message\">\r\n          <FontAwesomeIcon icon={icons.danger.static} />\r\n          {errors[name]}\r\n        </StyledInvalidMessage>\r\n      )}\r\n      <StyledLabel>{name.toUpperCase()}</StyledLabel>\r\n      <StyledField\r\n        type={type}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        className={customClass + (errors[name] && touched[name] ? ' invalid' : '')}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Contact;","C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Work\\Work.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\index.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\styles.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\icons.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\styles.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\types.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\config.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\API\\repositories\\testData\\workItems.ts",[],"C:\\Users\\sabouem\\Desktop\\my-card\\src\\UTILS\\i18n\\index.ts",[],{"ruleId":"87","severity":1,"message":"88","line":1,"column":25,"nodeType":"89","messageId":"90","endLine":1,"endColumn":39},{"ruleId":"87","severity":1,"message":"91","line":1,"column":25,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":19,"column":19,"nodeType":"92","messageId":"96","endLine":19,"endColumn":29},{"ruleId":"94","severity":1,"message":"97","line":21,"column":9,"nodeType":"92","messageId":"96","endLine":21,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":121,"column":54,"nodeType":"100","messageId":"101","endLine":121,"endColumn":57,"suggestions":"102"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'setLoading' is assigned a value but never used.","unusedVar","'handleLoaderState' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["103","104"],{"messageId":"105","fix":"106","desc":"107"},{"messageId":"108","fix":"109","desc":"110"},"suggestUnknown",{"range":"111","text":"112"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"111","text":"113"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[4326,4329],"unknown","never"]