[{"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx":"1","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx":"3","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx":"4","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx":"5","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx":"6","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx":"7","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx":"8","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx":"9","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx":"10","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts":"11","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts":"12","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts":"13","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts":"14","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx":"15","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts":"16","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts":"17","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts":"18"},{"size":297,"mtime":1617376054395,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1615668605724,"results":"21","hashOfConfig":"20"},{"size":1082,"mtime":1617810918524,"results":"22","hashOfConfig":"20"},{"size":889,"mtime":1619360706613,"results":"23","hashOfConfig":"20"},{"size":976,"mtime":1619366598969,"results":"24","hashOfConfig":"20"},{"size":5262,"mtime":1619367999145,"results":"25","hashOfConfig":"20"},{"size":5846,"mtime":1619360706615,"results":"26","hashOfConfig":"20"},{"size":4908,"mtime":1619463801381,"results":"27","hashOfConfig":"20"},{"size":742,"mtime":1619461575092,"results":"28","hashOfConfig":"20"},{"size":504,"mtime":1619360706610,"results":"29","hashOfConfig":"20"},{"size":85,"mtime":1617810918535,"results":"30","hashOfConfig":"20"},{"size":10619,"mtime":1619365849383,"results":"31","hashOfConfig":"20"},{"size":1353,"mtime":1615668605707,"results":"32","hashOfConfig":"20"},{"size":2770,"mtime":1619360706619,"results":"33","hashOfConfig":"20"},{"size":665,"mtime":1617810918529,"results":"34","hashOfConfig":"20"},{"size":1041,"mtime":1619360706600,"results":"35","hashOfConfig":"20"},{"size":61,"mtime":1617810918547,"results":"36","hashOfConfig":"20"},{"size":699,"mtime":1619462991678,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9h3fe0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx",[],[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js",["79","80"],"const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx",["81","82"],"import React, { useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\n\r\ninterface IPageContainerProps {\r\n  callback?: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst StyledContainer = styled(Container)`\r\n  margin-top: 70px;\r\n  padding: 0;\r\n`;\r\n\r\nconst PageContainer = ({ callback, children }: IPageContainerProps): JSX.Element => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const handleLoaderState = () => {\r\n    if (!callback) {\r\n      return;\r\n    }\r\n\r\n    callback();\r\n  };\r\n  \r\n  return (\r\n    <StyledContainer fluid>\r\n      {loading\r\n        && <PacmanLoader\r\n          loading={loading}\r\n          color=\"white\"\r\n          size={200}\r\n        />\r\n      }\r\n      {children}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default PageContainer;","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx",["83"],"import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport styled from 'styled-components';\r\nimport '../../UTILS/i18n/config';\r\nimport {useTranslation} from 'react-i18next';\r\nimport i18next from 'i18next';\r\nimport {\r\n  StyledIconLink,\r\n  StyledIconLinkName,\r\n  StyledIconLinkOverlay,\r\n  StyledLandingIconsColumn,\r\n  StyledSidebarSticker\r\n} from '../styles';\r\nimport {IIconStates} from '../types';\r\nimport {icons} from './icons';\r\nimport {LocaleEnum} from \"../../UTILS/i18n/types\";\r\n\r\ninterface IIconLinkWrapProps {\r\n  color: string;\r\n  iconStates: IIconStates;\r\n  name: string;\r\n  active: boolean;\r\n  isParentActive: boolean;\r\n  handleClick: (id: string) => void;\r\n}\r\n\r\nexport enum  SectionsEnum {\r\n  HOME = 'HOME',\r\n  BIO = 'BIO',\r\n  CONTACT = 'CONTACT',\r\n  WORK = 'WORK',\r\n}\r\n\r\nconst StyledLocaleButton = styled.div<{visible: boolean}>`\r\n  opacity: ${({visible}) => visible? 1 : 0};\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  border: 1px solid #002261;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: .5rem 0;\r\n  color: white;\r\n  //needs hover\r\n  @media (max-width: 768px) {\r\n    &&& {\r\n      opacity: 1;\r\n      margin: 0;\r\n      color: #002261;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sidebar = ():JSX.Element => {\r\n  const { t } = useTranslation(['ns3']);\r\n  const [activeSections, setActiveSections] = useState<string>(t('ns3:home'));\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [stickerOut, setStickerOut] = useState<boolean>(false);\r\n  const [currentLanguage, setCurrentLanguage] = useState<LocaleEnum>(LocaleEnum.EN)\r\n\r\n  const isActive = (id: SectionsEnum) => activeSections === id;\r\n  const isEnglish = currentLanguage === LocaleEnum.EN;\r\n\r\n  const handleSectionIconClick = (id: SectionsEnum) => {\r\n    const target = document.getElementById(id as string);\r\n\r\n    target?.scrollIntoView({behavior: 'smooth'});\r\n    setActiveSections(id);\r\n  };\r\n\r\n  const handleLanguageChange = () => {\r\n    const lang = isEnglish ? LocaleEnum.FR : LocaleEnum.EN;\r\n    i18next\r\n        .changeLanguage(lang)\r\n        .then((t) => {\r\n          setCurrentLanguage(lang)\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledSidebarSticker\r\n        isSidebarExpanded={expanded}\r\n        isSelfExpanded={stickerOut}\r\n        onClick={() => setExpanded(!expanded)}\r\n        onMouseEnter={() => setStickerOut(true)}\r\n        onMouseLeave={() => setStickerOut(false)}\r\n      >\r\n        <FontAwesomeIcon icon={icons.expand.static} rotate={stickerOut ? 180 : 0} />\r\n      </StyledSidebarSticker>\r\n      <StyledLandingIconsColumn className=\"d-flex\" expanded={expanded}>\r\n        <IconLinkWrap\r\n          handleClick={() => handleSectionIconClick(t('ns3:home'))}\r\n          active={isActive(SectionsEnum.HOME)}\r\n          isParentActive={expanded}\r\n          iconStates={icons.home}\r\n          name={SectionsEnum.HOME}\r\n          color=\"dark\"\r\n        />\r\n        <IconLinkWrap\r\n          handleClick={() => handleSectionIconClick(t('ns3:bio'))}\r\n          active={isActive(SectionsEnum.BIO)}\r\n          isParentActive={expanded}\r\n          iconStates={icons.profile}\r\n          name={SectionsEnum.BIO}\r\n          color=\"dark\"\r\n        />\r\n        <IconLinkWrap\r\n          handleClick={() => handleSectionIconClick(t('ns3:contact'))}\r\n          active={isActive(SectionsEnum.CONTACT)}\r\n          isParentActive={expanded}\r\n          iconStates={icons.mail}\r\n          name={SectionsEnum.CONTACT}\r\n          color=\"dark\"\r\n        />\r\n        <IconLinkWrap\r\n          handleClick={() => handleSectionIconClick(t('ns3:work'))}\r\n          active={isActive(SectionsEnum.WORK)}\r\n          isParentActive={expanded}\r\n          iconStates={icons.work}\r\n          name={SectionsEnum.WORK}\r\n          color=\"dark\"\r\n        />\r\n        {/* TODO: consider whether testimonials are relevant on their own, under the given 'work' section, or at all */}\r\n        {/* IF I add the dropdown in Contact, then this is automatically relevant */}\r\n        {/* <IconLinkWrap\r\n          handleClick={()=> handleSectionIconClick()}\r\n          active={isActive('/testimonials')}\r\n          isParentActive={expanded}\r\n          iconStates={icons.testimonials}\r\n          name={SectionsEnum.FEEDBACK}\r\n          color=\"dark\"\r\n        /> */}\r\n        {/* TODO: ditto */}\r\n        {/* <IconLinkWrap\r\n          handleClick={()=> handleSectionIconClick()}\r\n          active={isActive('/budget')}\r\n          isParentActive={expanded}\r\n          iconStates={icons.budget}\r\n          name={SectionsEnum.BUDGET}\r\n          color=\"dark\"\r\n        /> */}\r\n          <StyledLocaleButton\r\n            visible={expanded}\r\n            onClick={handleLanguageChange}\r\n          >{isEnglish ? t('ns3:fr') : t('ns3:en')}</StyledLocaleButton>\r\n      </StyledLandingIconsColumn>\r\n    </>\r\n  );\r\n};\r\n\r\nconst IconLinkWrap = ({ iconStates, color, name, active, handleClick, isParentActive }: IIconLinkWrapProps): JSX.Element => {\r\n  const [hovered, setHovered] = useState<boolean>(false);\r\n  const { t } = useTranslation(['ns3']);\r\n\r\n  return (\r\n    <StyledIconLink\r\n      active={active}\r\n      isParentActive={isParentActive}\r\n      className={color}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      onClick={() => handleClick(name)}\r\n    >\r\n      <StyledIconLinkOverlay className={color}>\r\n        {hovered && (\r\n          <div className=\"d-flex icon-link-title\">\r\n            <StyledIconLinkName>{t(`ns3:${name.toLowerCase()}`)}</StyledIconLinkName>\r\n          </div>\r\n        )}\r\n      </StyledIconLinkOverlay>\r\n      <FontAwesomeIcon icon={hovered || active ? iconStates?.hover : iconStates?.static} />\r\n    </StyledIconLink>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx",["84"],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts",[],{"ruleId":"85","severity":1,"message":"86","line":1,"column":25,"nodeType":"87","messageId":"88","endLine":1,"endColumn":39},{"ruleId":"85","severity":1,"message":"89","line":1,"column":25,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":17,"column":19,"nodeType":"90","messageId":"94","endLine":17,"endColumn":29},{"ruleId":"92","severity":1,"message":"95","line":19,"column":9,"nodeType":"90","messageId":"94","endLine":19,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":77,"column":16,"nodeType":"90","messageId":"94","endLine":77,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":124,"column":54,"nodeType":"99","messageId":"100","endLine":124,"endColumn":57,"suggestions":"101"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'setLoading' is assigned a value but never used.","unusedVar","'handleLoaderState' is assigned a value but never used.","'t' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["102","103"],{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},"suggestUnknown",{"range":"110","text":"111"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"110","text":"112"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[4267,4270],"unknown","never"]