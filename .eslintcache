[{"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx":"1","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx":"3","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx":"4","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx":"5","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx":"6","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx":"7","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx":"8","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx":"9","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx":"10","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts":"11","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts":"12","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts":"13","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts":"14","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx":"15","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts":"16","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts":"17","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts":"18"},{"size":297,"mtime":1617376054395,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1615668605724,"results":"21","hashOfConfig":"20"},{"size":1082,"mtime":1617377000932,"results":"22","hashOfConfig":"20"},{"size":892,"mtime":1615668605702,"results":"23","hashOfConfig":"20"},{"size":480,"mtime":1615668605700,"results":"24","hashOfConfig":"20"},{"size":4383,"mtime":1615668605698,"results":"25","hashOfConfig":"20"},{"size":1299,"mtime":1615668605691,"results":"26","hashOfConfig":"20"},{"size":4902,"mtime":1615668605692,"results":"27","hashOfConfig":"20"},{"size":967,"mtime":1615751791891,"results":"28","hashOfConfig":"20"},{"size":6029,"mtime":1617381265187,"results":"29","hashOfConfig":"20"},{"size":85,"mtime":1615668946273,"results":"30","hashOfConfig":"20"},{"size":2469,"mtime":1615668605708,"results":"31","hashOfConfig":"20"},{"size":9662,"mtime":1615668605711,"results":"32","hashOfConfig":"20"},{"size":1353,"mtime":1615668605707,"results":"33","hashOfConfig":"20"},{"size":665,"mtime":1615668976714,"results":"34","hashOfConfig":"20"},{"size":1502,"mtime":1615668605441,"results":"35","hashOfConfig":"20"},{"size":585,"mtime":1617376472691,"results":"36","hashOfConfig":"20"},{"size":61,"mtime":1617377792174,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9h3fe0",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\index.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\reportWebVitals.js",["79","80"],"const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\App.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\PageContainer.tsx",["81","82"],"import React, { useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\n\r\ninterface IPageContainerProps {\r\n  callback?: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst StyledContainer = styled(Container)`\r\n  margin-top: 70px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst PageContainer = ({ callback, children }: IPageContainerProps): JSX.Element => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const handleLoaderState = () => {\r\n    if (!callback) {\r\n      return;\r\n    }\r\n\r\n    callback();\r\n  };\r\n  \r\n  return (\r\n    <StyledContainer fluid>\r\n      {loading\r\n        && <PacmanLoader\r\n          loading={loading}\r\n          color=\"white\"\r\n          size={200}\r\n        />\r\n      }\r\n      {children}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default PageContainer;",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Footer.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Work\\Work.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Bio\\Bio.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Contact\\Contact.tsx",["83"],"import React from 'react';\r\nimport { Formik, useFormikContext } from 'formik';\r\nimport * as Yup from 'yup'; \r\nimport { BounceLoader } from 'react-spinners';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  StyledButtonOverlay, \r\n  StyledField, StyledFormWrapper,\r\n  StyledInvalidMessage,\r\n  StyledLabel,\r\n  StyledLoaderWrap\r\n} from '../styles';\r\nimport { icons } from '../common';\r\nimport SectionTitle from '../common/SectionTitle';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\ninterface IContactFieldProps {\r\n  name: string;\r\n  customClass?: string;\r\n  type?: string;\r\n}\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Must be a valid address.')\r\n    .required('Required'),\r\n  name: Yup.string()\r\n    .min(4, '4 characters minimum.')\r\n    .max(16, '16 characters maximum.')\r\n    .required('Required'),\r\n  message: Yup.string()\r\n    .min(20, '20 characters minimum.')\r\n    .max(200, '200 characters maximum.')\r\n});\r\n\r\n\r\nconst Contact = (): JSX.Element => {\r\n  // TODO: should I add a way to make the form about either REVIEW or Request? exp: \"reason\" dropdown field, and a link in page description that sets the dropdown to the value they want\r\n  // if you add this, then restore the Testimonials page\r\n  const { ref, inView } = useInView();\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      {inView && <SectionTitle title=\"Reach Out!\" isInview={inView} />}\r\n      <div className=\"pb-2\">Looking to work on a project together,need a website for your business, to promote a product or event?</div>\r\n      <div className=\"pb-2\">Hit me up below and I'd be happy to reply to any inquiries you have.</div>\r\n      <div className=\"pb-2\">Please note that <b>I DO NOT</b> participate in, or  provide consulting services for product/project development.</div>\r\n      <Formik\r\n        initialValues={{ email: '', name: '', message: '' }}\r\n        validationSchema={ContactSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          submitForm,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          isValid\r\n        }) => (\r\n        <StyledFormWrapper>\r\n          {isSubmitting && (\r\n            <StyledLoaderWrap>\r\n              <BounceLoader\r\n                size={150}\r\n                css={`\r\n                  opacity: .5;\r\n                `}\r\n                color=\"#0e155a\"\r\n                loading\r\n              />\r\n            </StyledLoaderWrap>\r\n          )}\r\n          <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n            <ContactField type=\"email\" name=\"email\" />\r\n            <ContactField type=\"name\" name=\"name\" />\r\n            <div className=\"d-flex flex-column w-100\">\r\n              {errors.message && touched.message && (\r\n                <StyledInvalidMessage className=\"invalid-message\">\r\n                  <FontAwesomeIcon icon={icons.danger.static} />\r\n                  {errors.message}\r\n                </StyledInvalidMessage>\r\n              )}\r\n              <StyledLabel>MESSAGE</StyledLabel>\r\n              <StyledField\r\n                name=\"message\"\r\n                as=\"textarea\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={'message' + (errors.message && touched.message ? ' invalid' : '')}\r\n              />\r\n            </div>\r\n            <StyledButtonOverlay \r\n              className={`d-flex flex-column position-relative ${!isValid ? ' invalid' : ''}`}\r\n              onClick={submitForm}\r\n            >\r\n              <div className=\"static\">\r\n                <div className=\"top\">Submit</div>\r\n              </div>\r\n              <div className=\"hovered\">\r\n                <div className=\"top\">Submit</div>\r\n              </div>\r\n            </StyledButtonOverlay>\r\n          </form>\r\n        </StyledFormWrapper>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ContactField = ({name, customClass, type}: IContactFieldProps) => {\r\n  const {touched, errors, handleChange, handleBlur}: any = useFormikContext();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column w-100\">\r\n      { errors[name] && touched[name] && (\r\n        <StyledInvalidMessage className=\"invalid-message\">\r\n          <FontAwesomeIcon icon={icons.danger.static} />\r\n          {errors[name]}\r\n        </StyledInvalidMessage>\r\n      )}\r\n      <StyledLabel>{name.toUpperCase()}</StyledLabel>\r\n      <StyledField\r\n        type={type}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        className={customClass + (errors[name] && touched[name] ? ' invalid' : '')}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Contact;","C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\Landing\\LandingPage.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\Sidebar.tsx",["84"],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\index.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\styles.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\icons.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\COMPONENTS\\common\\SectionTitle.tsx",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\API\\repositories\\testData\\workItems.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\config.ts",[],"C:\\Users\\Admin\\Desktop\\WEB_DEV\\MY_SITE\\my-card\\src\\UTILS\\i18n\\types.ts",[],{"ruleId":"85","severity":1,"message":"86","line":1,"column":25,"nodeType":"87","messageId":"88","endLine":1,"endColumn":39},{"ruleId":"85","severity":1,"message":"89","line":1,"column":25,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":17,"column":19,"nodeType":"90","messageId":"94","endLine":17,"endColumn":29},{"ruleId":"92","severity":1,"message":"95","line":19,"column":9,"nodeType":"90","messageId":"94","endLine":19,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":121,"column":54,"nodeType":"98","messageId":"99","endLine":121,"endColumn":57,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"101","line":69,"column":16,"nodeType":"90","messageId":"94","endLine":69,"endColumn":17},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'setLoading' is assigned a value but never used.","unusedVar","'handleLoaderState' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["102","103"],"'t' is defined but never used.",{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},"suggestUnknown",{"range":"110","text":"111"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"110","text":"112"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[4262,4265],"unknown","never"]